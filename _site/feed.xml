<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title>Dong-Uk Seo</title>
    
    
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title>Azure Kinect DK install</title>
        <description>
          SDK &amp; ROS driver - 
          ToF방식의 RGB-D 카메라인 Azure Kinect DK ROS설치 과정 정리 경로 추가 curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - sudo apt-add-repository https://packages.microsoft.com/ubuntu/18.04/prod sudo apt-get update 설치하기 sudo apt-get install k4a-tools sudo apt search k4a sudo apt-get install libk4a1.4-dev Linux device setup cd /etc/udev/rules.d gedit 99-k4a.rules 99-k4a.rules파일에 다음 경로의 텍스트를 복사하여...
        </description>
        <pubDate>Fri, 07 Jul 2023 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2023-07-07-Azure-Kinect-Dk-install/</link>
        <guid isPermaLink="true">http://localhost:4000/2023-07-07-Azure-Kinect-Dk-install/</guid>
      </item>
    
      <item>
        <title>RPG trajectory evaluation on multiple trajectories</title>
        <description>
          Estimation과 GT 비교 알고리즘 - 
          How to make up configuration in the rpg-trajectory-evaluation open-source 여러개의 dataset상 혹은 relative pose Error를 구할 때, single trajectory estimate보다는 다음과 같은 multiple trajectory estimates가 주로 활용된다. rosrun rpg_trajectory_evaluation analyze_trajectories.py \ kitti_lego.yaml --output_dir=./results/kitti_lidar --results_dir=./results/kitti_lidar --platform laptop --odometry_error_per_dataset --plot_trajectories --rmse_table --rmse_boxplot --mul_trials=1 이때, 위 코드를 기준으로 kitti_lego.yaml을 기준으로 파일들을 읽어오게 되므로,...
        </description>
        <pubDate>Sat, 19 Mar 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2022-03-19-rpg-trajectories/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-03-19-rpg-trajectories/</guid>
      </item>
    
      <item>
        <title>VINS-Fusion Code Review - (6) Graph optimization</title>
        <description>
          
          6. Graph optimization 파트 중요 코드 정리 1. Relocalization 1) int main(int argc, char **argv) ... VISUALIZATION_SHIFT_X = 0; VISUALIZATION_SHIFT_Y = 0; SKIP_CNT = 0; SKIP_DIS = 0; cameraposevisual.setScale(0.1); cameraposevisual.setLineWidth(0.01); string vocabulary_file = pkg_path + &quot;/../support_files/brief_k10L6.bin&quot;; posegraph.loadVocabulary(vocabulary_file); BRIEF_PATTERN_FILE = pkg_path + &quot;/../support_files/brief_pattern.yml&quot;; ... posegraph.setIMUFlag(USE_IMU); ros::Subscriber sub_vio = n.subscribe(&quot;/vins_estimator/odometry&quot;, 2000, vio_callback);...
        </description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2022-01-05-VINS-Fusion-6/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-01-05-VINS-Fusion-6/</guid>
      </item>
    
      <item>
        <title>VINS-Fusion Code Review - (5) Marginalization</title>
        <description>
          
          (5) Marginalization 파트 중요 코드 정리 [논문설명 발췌] In order to bound the computational complexity of our optimization-based VIO, marginalization is incorporated Second-last frame이 keyframe이면 : oldest가 marginalized. Non-keyframe이면 : visual은 삭제하고 IMU값은 축적한다. → Our marginalization scheme aims to keep spatially separated keyframes in the window. This ensures sufficient...
        </description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2022-01-05-VINS-Fusion-5/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-01-05-VINS-Fusion-5/</guid>
      </item>
    
      <item>
        <title>VINS-Fusion Code Review - (4) Sliding window &amp; Optimization</title>
        <description>
          
          (4) Sliding window &amp;amp; Optimization 파트 중요 코드 정리 1. Optimizing local parameters 1) void Estimator::vector2double() for (int i = 0; i &amp;lt;= WINDOW_SIZE; i++) { para_Pose[i][0] = Ps[i].x(); para_Pose[i][1] = Ps[i].y(); para_Pose[i][2] = Ps[i].z(); Quaterniond q{Rs[i]}; para_Pose[i][3] = q.x(); para_Pose[i][4] = q.y(); para_Pose[i][5] = q.z(); para_Pose[i][6] = q.w(); if(USE_IMU)...
        </description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2022-01-05-VINS-Fusion-4/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-01-05-VINS-Fusion-4/</guid>
      </item>
    
      <item>
        <title>VINS-Fusion Code Review - (3) Initialization</title>
        <description>
          
          (3) Initialization 파트 중요 코드 정리 다음은 Initialization에 대한 VINS-Mono논문 설명이다. Since the scale is not directly observable from a monocular camera, it is hard to directly fuse these two measurements without good initial values. One may assume a stationary initial condition to start the monocular VINS estimator. However, this...
        </description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2022-01-05-VINS-Fusion-3/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-01-05-VINS-Fusion-3/</guid>
      </item>
    
      <item>
        <title>VINS-Fusion Code Review - (2) IMU Processing</title>
        <description>
          
          (2) IMU processing 파트 중요 코드 정리 1. IMU - fast prediction imu_callback() ... estimator.inputIMU(t, acc, gyr); ... imu message로부터 time (second), linear_acceleration (x,y,z), angular_velocity(roll,pitch,yaw)를 얻어서 inputIMU에 넣는다. void inputIMU(double t, const Vector3d &amp;amp;linearAcceleration, const Vector3d &amp;amp;angularVelocity) if (solver_flag == NON_LINEAR) { fastPredictIMU(t, linearAcceleration, angularVelocity); pubLatestOdometry(latest_P, latest_Q, latest_V, t); }...
        </description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2022-01-05-VINS-Fusion-2/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-01-05-VINS-Fusion-2/</guid>
      </item>
    
      <item>
        <title>VINS-Fusion Code Review - (1) Image Processing</title>
        <description>
          
          (1) Image processing 파트 중요 코드 정리 1. Parameter 초기화 main() readParameters(config_file); // yaml 파일형식으로 parameters(camera 등)를 읽어옴 estimator.setParameter(); // Multi thread의　경우　ProcessMeasurements　실행 ... std::thread sync_thread{sync_process}; // sync_process를 진행하는 thread 생성 ... global 변수로 선언된 estimator의 setParameter함수 호출. publish, subscribe할 topic과 node, callback함수 지정. 이때, feature_callback은 사용되지 않는다. vins-mono에서는 독립적인 node로...
        </description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2022-01-05-VINS-Fusion-1/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-01-05-VINS-Fusion-1/</guid>
      </item>
    
      <item>
        <title>Frame간의 Transformation matrix</title>
        <description>
          SLAM configuration file - 
          SLAM분야에서는 Calibration등의 과정에서 두 프레임이 주어졌을때 transformation matrix를 구해야하는 상황이 흔히 발생한다. 하지만 transformation의 기준, 예를들어 Transformation from camera to body-frame이 어떤것을 나타내는지는 오픈소스의 저자마다 axis기준인지 point기준인지 다를수 있어 주의가 필요하다. 1. Concept VINS-Mono의 config를 보면 #Rotation from camera frame to imu frame, imu^R_cam extrinsicRotation: !!opencv-matrix rows: 3 cols: 3...
        </description>
        <pubDate>Sat, 18 Dec 2021 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2021-12-18-calc-tf/</link>
        <guid isPermaLink="true">http://localhost:4000/2021-12-18-calc-tf/</guid>
      </item>
    
      <item>
        <title>Getting Stereo-Inertial data with Realsense camera</title>
        <description>
          
          Tips for acquiring data in d435i camera


  ros 기본패키지 (camera_calibration)을 사용하여 ORB SLAM3에서 필요로하는 rectification을 위한 projection matrix를 구한다.  
http://wiki.ros.org/camera_calibration
  d435i ros구동시에 rs_camera_launch에서 unite_imu_method option을 linear_interpolation로, enable_sync를 true로 지정한다. (infra laser 옵션도 꺼준다.)
  kalibr패키지를 통해 정확한 extrinsic parameter를 구해 ORB SLAM3를 위한 yaml file을 완성한다.  
https://github.com/ethz-asl/kalibr



        </description>
        <pubDate>Fri, 27 Aug 2021 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2021-08-27-orb-slam3-d435i/</link>
        <guid isPermaLink="true">http://localhost:4000/2021-08-27-orb-slam3-d435i/</guid>
      </item>
    
  </channel>
</rss>
